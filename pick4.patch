diff --git a/cpp/model/ReceiptPrinter.h b/cpp/model/ReceiptPrinter.h
index 16c61e4..9a17b3b 100644
--- a/cpp/model/ReceiptPrinter.h
+++ b/cpp/model/ReceiptPrinter.h
@@ -29,11 +29,20 @@ public:
         {
             result.append(presentDiscount(discount));
         }
-        result.append("\n");
+        result.append(horizontalLine());
         result.append(presentTotal(receipt));
         return result;
     }
 
+    std::string horizontalLine() {
+        std::string result;
+        for (int i = 0; i < columns; i++) {
+            result.append("-");
+        }
+        result.append("\n");
+        return result;
+    }
+
     std::string presentReceiptItem(const ReceiptItem &item) const
     {
         std::string price = getFormattedNumberAsString(item.getTotalPrice(), 2);
diff --git a/csharp/SupermarketReceipt/ReceiptPrinter.cs b/csharp/SupermarketReceipt/ReceiptPrinter.cs
index 954f9d7..b790de0 100644
--- a/csharp/SupermarketReceipt/ReceiptPrinter.cs
+++ b/csharp/SupermarketReceipt/ReceiptPrinter.cs
@@ -36,12 +36,22 @@ namespace SupermarketReceipt
             }
 
             {
-                result.Append("\n");
+                result.Append(PrintHorizontalLine());
                 result.Append(PrintTotal(receipt));
             }
             return result.ToString();
         }
 
+        private string PrintHorizontalLine()
+        {
+            var result = new StringBuilder();
+            for (int i = 0; i < _columns; i++) {
+                result.Append("-");
+            }
+            result.Append("\n");
+            return result.ToString();
+        }
+
         private string PrintTotal(Receipt receipt)
         {
             string name = "Total: ";
diff --git a/java/src/main/java/dojo/supermarket/ReceiptPrinter.java b/java/src/main/java/dojo/supermarket/ReceiptPrinter.java
index e6f1bbd..85a0241 100644
--- a/java/src/main/java/dojo/supermarket/ReceiptPrinter.java
+++ b/java/src/main/java/dojo/supermarket/ReceiptPrinter.java
@@ -27,11 +27,18 @@ public class ReceiptPrinter {
             result.append(discountPresentation);
         }
 
-        result.append("\n");
+        horizontalLine(result);
         result.append(presentTotal(receipt));
         return result.toString();
     }
 
+    private void horizontalLine(StringBuilder result) {
+        for (int i = 0; i < this.columns; i++) {
+            result.append("-");
+        }
+        result.append("\n");
+    }
+
     private String presentReceiptItem(ReceiptItem item) {
         String totalPricePresentation = presentPrice(item.getTotalPrice());
         String name = item.getProduct().getName();
diff --git a/python/receipt_printer.py b/python/receipt_printer.py
index 7550fe9..55d0e11 100644
--- a/python/receipt_printer.py
+++ b/python/receipt_printer.py
@@ -15,7 +15,7 @@ class ReceiptPrinter:
             discount_presentation = self.print_discount(discount)
             result += discount_presentation
 
-        result += "\n"
+        result += self.horizontal_line()
         result += self.present_total(receipt)
         return str(result)
 
@@ -54,3 +54,10 @@ class ReceiptPrinter:
         name = "Total: "
         value = self.print_price(receipt.total_price())
         return self.format_line_with_whitespace(name, value)
+
+    def horizontal_line(self):
+        result = ""
+        for i in range(self.columns):
+            result += "-"
+        result += "\n"
+        return result
\ No newline at end of file
